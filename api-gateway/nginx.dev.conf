events {
    worker_connections 1024;
}

http {
  resolver 127.0.0.11 valid=10s; # Use Docker DNS with a 10s cache

  # Define connection_upgrade map
  map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
  }

  server {
    listen 80;

    location /analytics {
        set $analytics_backend http://analytics-service:5000;
        proxy_pass $analytics_backend;
        proxy_intercept_errors on;
        error_page 502 /502.html;
    }

    location /users {
        set $user_backend http://user-service:5000;
        proxy_pass $user_backend;
        proxy_intercept_errors on;
        error_page 502 /502.html;
    }

    location /calendar {
        set $calendar_backend http://calendar-service:5104;
        proxy_pass $calendar_backend;
        proxy_intercept_errors on;
        error_page 502 /502.html;
    }

    location /communication {
            set $communication_backend http://communication-service:5103;
            proxy_pass $communication_backend;
            proxy_intercept_errors on;
            error_page 502 /502.html;
        }

    location / {
        proxy_pass http://client:5173;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

}
